# This is Git's per-user configuration file.
[core]
# Please adapt and uncomment the following lines:
  user = Lucas Roesler
  email = roesler.lucas@gmail.com
  editor = vim

[user]
  name = Lucas Roesler
  email = roesler.lucas@gmail.com
  signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIMoCFFRKiLnU6poXQMcjkalu6eci6NfzP4lMpNgecTT

[help]
  autocorrect = 1

[init]
  defaultBranch = main

[commit]
  gpgsign = true

[gpg]
  program = gpg
  format = ssh

[gpg "ssh"]
  program = /opt/1Password/op-ssh-sign

[push]
  default = simple
  followTags = true
  autoSetupRemote = true

[fetch]
  prune = true
  pruneTags = true
  all = true

[pull]
  ff = only

[rebase]
  autoSquash = true
  autoStash = true
  updateRefs = true

[rerere]
  enabled = 1
  autoUpdate = 1

[column]
  ui = auto

[branch]
  sort = -committerdate

[tag]
  sort = version:refname

[diff]
  # Use better, descriptive initials (c, i, w) instead of a/b.
  mnemonicPrefix = true
  renames = true
  compactionHeuristic = true
  tool = difftastic
  external = difft

[difftool]
  prompt = false

[difftool "difftastic"]
  cmd = difft "$LOCAL" "REMOTE"

[mergetool]
  prompt = false

[pager]
  difftool = true

[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  required = true
  process = git-lfs filter-process

[log]
    # Use abbrev SHAs whenever possible/relevant instead of full 40 chars
  abbrevCommit = true

[alias]
    # common operations
  cp = cherry-pick
  co = checkout
  sw = switch
  force = "push --force-with-lease --force-if-includes"
  undo-commit = reset --soft HEAD~1

  update = "pull --rebase origin main"
    # sort branches by last update
  b = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"

    # log as a graph
  graph = log --graph --oneline --decorate --all

    # one-line log
  l = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
    # one-line log with list of files changed
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat

    # cleanup old branches
    ; audit = "!git branch --merged | grep -v '\\*\\|master\\|develop\\|release-'"
    ; clean-audit = "!git branch --merged | grep -v '\\*\\|master\\|develop\\|release-' | xargs -n 1 git branch -d"
  clean-audit = "!git audit | xargs -n 1 git branch -D"

  cleanup = "!xargs -n 1 git branch -D"

    # squash the currently staged files into the previous commit
    # note that if you have already pushed the branch, you will probably
    # need to push with `git push -f`
  fixup = "!git commit --amend"

    # Thin out older metadata within the repository, reduceses filesystem footprint
  trim = !git reflog expire --expire=now --all && git gc --prune=now

    # list git aliases
  la = "!git config -l | grep alias | cut -c 7-"



[url "https://github.com/"]
  insteadOf = gh:
[url "https://gist.github.com/"]
  insteadOf = gist:

[url "ssh://git@github.com/"]

[url "ssh://git@github.com/contiamo/"]
  insteadOf = https://github.com/contiamo/

[url "https://gitlab.devops.telekom.de/eliza/"]
  insteadOf = git@gitlab.devops.telekom.de:eliza

[url "https://gitlab.devops.telekom.de/pktwo"]
  insteadOf = git@gitlab.devops.telekom.de:pktwo

[url "https://gitlab.devops.telekom.de/gsus-rem"]
  insteadOf = git@gitlab.devops.telekom.de:gsus-rem
